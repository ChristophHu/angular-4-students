{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let PropertybindingComponent = /*#__PURE__*/(() => {\n  class PropertybindingComponent {\n    constructor() {\n      this.title = 'Property Binding';\n      this.propertyString = 'Property String vom Controller';\n    }\n    static #_ = this.ɵfac = function PropertybindingComponent_Factory(t) {\n      return new (t || PropertybindingComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PropertybindingComponent,\n      selectors: [[\"propertybinding\"]],\n      decls: 13,\n      vars: 3,\n      consts: [[1, \"my-4\"], [1, \"leading-4\", \"mb-2\", \"text-xl\"], [1, \"flex\", \"flex-col\"], [\"type\", \"text\", 1, \"p-2\", \"bg-gray-100\", \"border\", \"border-gray-200\", \"rounded\", \"shadow-lg\", 3, \"value\"], [1, \"flex\", \"flex-row\", \"items-center\"], [\"type\", \"checkbox\", 3, \"checked\"], [1, \"ml-2\"], [1, \"text-gray-500\"]],\n      template: function PropertybindingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵelement(4, \"input\", 3);\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵelement(6, \"input\", 5);\n          i0.ɵɵelementStart(7, \"span\", 6);\n          i0.ɵɵtext(8, \"Checkbox\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"span\");\n          i0.ɵɵtext(10, \"Beschreibung:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"p\", 7);\n          i0.ɵɵtext(12, \"Property (zu deutsch: Eigenschaft) sind Bestandteil von HTML-Tags. Diese k\\u00F6nnen in Angular nicht nur gesetzt, sondern auch durch die Logik dynamisch gesetzt werden. Es handelt sich dabei um Property-Bindung. Die Properties sind dann in eckigen Klammern zu schreiben und mit einer Variablen zu versehen.\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"1.2 \", ctx.title, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.propertyString);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"checked\", true);\n        }\n      }\n    });\n  }\n  return PropertybindingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}